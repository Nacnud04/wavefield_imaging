from rsf.proj import *
import polar_util as putil
import sys, os

sys.path.append('/home/byrne/WORK/CODE')
import byrne_awe as awe

# compile project
proj = Project()

# import modules
RSFPATH = proj.get('RSFSRC')
print(f"RSFPATH: {RSFPATH}")
sys.path.append(os.getenv('RSFSRC')+'/book/Recipes')

# import modules
import math, fdmod, encode, wemig, stiffness

pi = 3.14159
# define paramterers
par = {
    # model dimensions
    'nra':600,'ora':10    ,'dra':0.00025,'lra':'r','ura':'km',
    'nth':400,'oth':pi/4.,'dth':0.000025,'lth':'Î¸','uth':'rad',
    # time parameters
    'kt':100, 'frq':400,
    'nt':1600, 'ot':0, 'dt':0.000025, 'lt':'t', 'ut':'s',
    # model params
    'snap':'y','bnds':'y','jsnap':20,'height':6,
    'nb':32,'nbell':5,'jdata':1,'dabc':'y',
    'free':'y','ssou':'y','nc':1,'gpu':0,
}

# initialize params in the fdm model
fdmod.param(par)
par['nframe'] = 20
par['iframe'] = 8

# thomsen params
par['vp'] = 1

# generate velocity file
Flow('vp',None,'''spike nsp=1 mag=%(vp)g n1=%(nra)d o1=%(ora)g d1=%(dra)g n2=%(nth)d o2=%(oth)g d2=%(dth)g |
        put label1=%(lra)s label2=%(lth)s unit1=%(ura)s unit2=%(uth)s''' % par)

# gen receiver array
receiver_par = par
receiver_par['ox'] = par['oth']
receiver_par['nx'] = par['nth']
receiver_par['dx'] = par['dth']
receiver_par['lx'] = par['lth']
receiver_par['ux'] = par['uth']
receiver_par['oz'] = par['ora']
receiver_par['nz'] = par['nra']
receiver_par['dz'] = par['dra']
receiver_par['lz'] = par['lra']
receiver_par['uz'] = par['ura']

rec_z = par['ora'] + par['nra'] * par['dra']

putil.horizontal('rr-2d', 10.075, receiver_par)

# generate plane wave
putil.horizontal('ss-2d', 10.09, receiver_par)

# generate wavelet
awe.wavelet('wav', par['frq'], '', par)

awe.spawefd2d('dat', 'wfl', 'wav', 'vp', None, 'ss-2d', 'rr-2d', '', par)

Result('dat', 'window | transp | grey')

Result('wfl', 'window | grey gainpanel=a')

End()
