from rsf.proj import * # set up generic proj files
import sys, os # import madagascar path

# compile project
proj = Project()

# import modules
RSFPATH = proj.get('RSFSRC')
print(f"RSFPATH: {RSFPATH}")
sys.path.append(os.getenv('RSFSRC')+'/book/Recipes')

# import modules
import math, fdmod, encode, wemig, stiffness

## ACTUAL SCONSTRUCT
par = {
    # model dimensions
    'nx':800, 'ox':-0.05, 'dx':0.00025,  'lx':'x', 'ux':'km',
    'ny':400, 'oy':-0.05, 'dy':0.00025,  'ly':'y', 'uy':'km',
    'nz':400, 'oz':0, 'dz':0.00025,  'lz':'z', 'uz':'km',
    # time params
    'kt':100, 'frq':600,
    'nt':1601,'ot':0, 'dt':0.000025,  'lt':'t', 'ut':'s',
    # Shot locations
    'nsx':1,  'dsx':0.0050, 'osx':0,
    'nsy':1,  'dsy':0.0050, 'osy':0,
    # model params
    'snap':'y','bnds':'y','jsnap':50,'height':6,
    'nb':32,'nbell':5,'jdata':1,'dabc':'y',
    'free':'n','ssou':'y', 'nc':1, 'gpu':0,
}

# initalize params in fdm module
fdmod.param(par)
par['nframe'] = 20
par['iframe'] = 8

# thomsen params
par['vp'] = 3.5#2.1
par['ro'] = 2000

# generate velocity file
Flow('vp',None,'''spike nsp=1 mag=%(vp)g n1=%(nx)d o1=%(ox)g d1=%(dx)g n2=%(nz)d o2=%(oz)g d2=%(dz)g n3=%(ny)d o3=%(oy)g d3=%(dy)g |
                  put label1=%(lx)s label2=%(lz)s label3=%(ly)s unit1=%(ux)s unit2=%(uz)s unit3=%(uy)s''' % par)
Flow('ro',None,'''spike nsp=1 mag=%(ro)g n1=%(nx)d o1=%(ox)g d1=%(dx)g n2=%(nz)d o2=%(oz)g d2=%(dz)g n3=%(ny)d o3=%(oy)g d3=%(dy)g |
                  put label1=%(lx)s label2=%(lz)s label3=%(ly)s unit1=%(ux)s unit2=%(uz)s unit3=%(uy)s''' % par)

# create a wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         pad end1=%(nt)d |
         ricker1 frequency=%(frq)g |
         window n1=%(nt)d |
         scale axis=123 | sftransp |
         put label1=t
         ''' % par)

# generate source position
zsou=par['oz']+(par['nz']-1)*par['dz']/4.
xsou=par['ox']+(par['nx']-1)*par['dx']/2.
ysou=par['oy']+(par['ny']-1)*par['dy']/2.

# gen point source
fdmod.point3d('ss-3d', xsou, ysou, zsou, par)

# gen receiver array
fdmod.horizontal3d('rr-3d', 0, par)

# run elastic model
Flow(['dat', 'wfl'], ['wav', 'vp', 'ss-3d', 'rr-3d', 'ro'], 
    '''
    ~/WORK/CODE/sfAWEFD3D
    vel=${SOURCES[1]} den=${SOURCES[4]} 
    sou=${SOURCES[2]} rec=${SOURCES[3]} 
    wfl=${TARGETS[1]} 
    verb=y fsrf=%(free)s expl=n hybrid=n 
    dabc=%(dabc)s nb=%(nb)d 
    snap=%(snap)s bnds=%(bnds)s jsnap=%(jsnap)d 
    jdata=%(jdata)d 
    ''' % par)

Result('dat', 'window n1={par["nx"]} f1=160000 | transp | grey')
Result('wfl', 'window n3=1 f3={par["ny"]/2} | grey gainpanel=a')

End()
